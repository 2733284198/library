<template>
  <view class="map">
    <map id="map" longitude="{{myLong}}" latitude="{{myLat}}" scale="14" markers="{{markers}}"  @markertap="markertap" @regionchange="regionchange" show-location style="width: 100%; height: 1060rpx;">
      <cover-view class='btn' bindtap='codeg' style="background: white;width: 200rpx;position: absolute;right: 0;bottom: 12rpx;padding: 12rpx;">
        <cover-image src='/images/position.png'  @tap="moveToLocation" class='ten_l flo_l' style="width: 68rpx;height: 68rpx;margin-right: 22rpx;"></cover-image>
        <cover-image src='/images/search.png'  class='code flo_l' style="width: 68rpx;height: 68rpx;"></cover-image>
      </cover-view>
    </map>
  </view>
  <!--<view style="height: 60rpx"></view>-->
  <view style="padding:32rpx 22rpx; background: white;" class="font_32">
    <view>
      <view class="inline-block">
        阳光书坊阅览室
      </view>
      <view class="flo_r" style="color: #35bbe6">300m</view></br>
    </view>
    <view class="inline-block ellipsis_2 font_28" style="width: 92%;margin-top: 16rpx;color: #999999">
      为基督徒的弟兄们提供免费的图书节约与共享服务@！
    </view>
    <view class="flo_r bold" style="font-size: 46rpx; color: #35bbe6" >></view>
  </view>
  <!--<button type="primary" @tap="getCenterLocation">获取位置</button>-->
  <!--<button type="primary" @tap="moveToLocation">移动位置</button>-->
  <!--<button type="primary" @tap="translateMarker">移动标注</button>-->
  <!--<button type="primary" @tap="includePoints">缩放视野展示所有经纬度</button>-->
</template>

<script>
  import wepy from 'wepy'
  import http from '../mixins/http'
  import base from '../mixins/base'
  import user from '../mixins/user'
  import ShareMessage from '../mixins/ShareMessage'
  import { service } from '../config.js'

  export default class pageQr extends wepy.page {
    mixins = [base, http, user, ShareMessage]
    config = {
      navigationBarTitleText: '',
      enablePullDownRefresh: false
    }
    data = {
//      markers标记点
      markers: [{
        iconPath: '/images/icon-position.png',
        id: 1,
        latitude: 22.530254,
        longitude: 113.93841,
        width: 30,
        height: 30,
        title: '【软银科技】啊\n',
        callout: {
          content: '【软银科】',
          color: '#2c8df6',
          fontSize: 20,
          borderRadius: 6,
          bgColor: '#fff',
          display: 'BYCLICK',
          boxShadow: '2px 2px 10px #aaa'
        }
      },
      {
        iconPath: '/images/icon-position.png',
        id: 2,
        latitude: 22.53254,
        longitude: 113.93001,
        width: 30,
        height: 30,
        callout: {
          content: '【软银科技】',
          color: '#2c8df6',
          fontSize: 20,
          borderRadius: 6,
          bgColor: '#fff',
          display: 'BYCLICK',
          boxShadow: '2px 2px 10px #aaa'
        }
      }
      ],
      circles: [{
        latitude: '40.007153',
        longitude: '116.491081',
        color: '#FF0000DD',
        fillColor: '#7cb5ec88',
        radius: 400,
        strokeWidth: 2
      }],
      myLong: '',
      myLat: '',
    }
    onShow() {
      this.$parent.getTracker(this.$root.$name, this.config.navigationBarTitleText)
      this.getCenterLocation()
    }
    onLoad() {
      this.mapCtx = wx.createMapContext('map')
    }

    getCenterLocation() {
      let that = this
      wx.getLocation({
        type: 'gcj02',
        success: function(res) {
//          var latitude = res.latitude
//          var longitude = res.longitude
          that.myLong = res.longitude
          that.myLat = res.latitude
          console.log(that.myLong)
          console.log(that.myLat)
          that.$apply()
        }
      })
    }

    getLngLat() {
      var that = this
      this.mapCtx = wx.createMapContext('map')
      this.mapCtx.getCenterLocation({
        success: function (res) {
//          that.setData({
            that.longitude= res.longitude,
            that.latitude= res.latitude,
            that.markers.push(
              {id: 0,
                iconPath: '/images/icon-label.png',
                longitude: res.longitude,
                latitude: res.latitude,
                width: 30,
                height: 30}
            )
          console.log( that.longitude)
          console.log( that.latitude)
           that.$apply()
        }
      })
    }
    distance() {
      let to = ''
      this.markers.forEach((item, index ,arr) => {
        to = arr[index].latitude + ',' + arr[index].longitude
      })
      let data = {
        mode: 'driving',
        from: this.latitude+ ',' +this.longitude,
        to: to,
        key: 'DQ3BZ-SWT3U-HUQV7-BBO3U-OU7WS-53FBV'
      }
      let url = 'http://apis.map.qq.com/ws/distance/v1/'
      this.$get({url: url,data}, {
        success: ({code, data}) => {
          debugger
          wx.setStorageSync('is_new', data.user.is_news)
          if (data.user.is_news) {
            wepy.showTabBarRedDot({
              index: 4
            })
          } else {
            wepy.hideTabBarRedDot({
              index: 4
            })
          }
        }
      })
    }
    mapLibraries(){
      let that = this
      this.$get({
        url: service.maps,
        data: {
          location_latitude: that.latitude,
          location_longitude: that.longitude
        }
      }, {
        success: ({code, data}) => {
          this.noMoreList = false
        },
        fail: ({code, data}) => {
          // 失败了什么也不做
        },
        complete: () => {
          this.loading = false
        }
      })
    }
    methods = {
      moveToLocation () {
        this.mapCtx.moveToLocation()
      },
      translateMarker() {
        this.mapCtx.translateMarker({
          markerId: 0,
          autoRotate: true,
          duration: 1000,
          destination: {
            latitude: 23.10229,
            longitude: 113.3345211
          },
          animationEnd() {
            console.log('animation end')
          }
        })
      },
      includePoints() {
        this.mapCtx.includePoints({
          padding: [10],
          points: [{
            latitude: 23.10229,
            longitude: 113.3345211
          }, {
            latitude: 23.20229,
            longitude: 113.4345211
          }, {
            latitude: 23.12229,
            longitude: 113.3945211
          }, {
            latitude: 23.00229,
            longitude: 113.3345211
          }]
        })
      },
      regionchange(e) {
        console.log(e.type)

//        if (e.type == 'end') {
          this.getLngLat()
//          this.distance()
          this.mapLibraries()
//        }else {
          this.markers.forEach((item, index) => {
            if (item.id == 0) {
              console.log(index)
              this.markers.splice(index, 1)
            }
          })
//        }
      },
      markertap(e) {
        console.log(e.markerId)
      },
      controltap(e) {
        console.log(e.controlId)
      }
    }
  }
</script>

<style lang="less">
  page{
    /*background: white;*/
  }
</style>
